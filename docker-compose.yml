version: '3.7'

services:
  # backend_latihan:
  #   container_name: latihan-backend
  #   image: latihan-backend:1.0.0
  #   build:
  #     context: .
  #     dockerfile: ./dockerfile
  #   env_file:
  #     - ./.docker.env
  #   ports:
  #     - 3333:${PORT}
  #   volumes:
  #     - .:/src/
  #     - node_modules:/src/node_modules/
  #   networks:
  #     - default
  #   command: npm run start:dev
  #   restart: unless-stopped

  postgres_latihan:
    container_name: latihan-postgres
    image: postgres:14-alpine
    hostname: ${POSTGRES_HOST}
    volumes:
      - postgres:/var/lib/postgresql
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPORT: ${POSTGRES_PORT}
      SCHEMA_NAME: public
    ports:
      - 5555:${POSTGRES_PORT}
    networks:
      - default
    restart: on-failure
  
  # mongo_latihan:
  #   container_name: latihan-mongo
  #   image: mongo:latest
  #   hostname: mongo
  #   volumes:
  #     - mongo_data:/data/db
  #     - mongo_config:/data/configdb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: latihan
  #     MONGO_INITDB_ROOT_PASSWORD: 174nd
  #   ports: 
  #     - 27017:27017
  #   networks:
  #     - default
  #   restart: always

volumes: 
  postgres:
    name: latihan-postgres
  postgres_data:
    name: latihan-postgres_data
  mongo_data:
    name: latihan-mongo_data
  mongo_config:
    name: latihan-mongo_config
  node_modules:
    name: latihan-node_modules

networks:
  default:
    name: latihan-network
    driver: bridge
